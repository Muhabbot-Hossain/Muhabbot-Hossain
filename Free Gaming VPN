dependencies {
    implementation project(':openvpn') // Assuming 'openvpn' is the module name after importing
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "com.google.android.material:material:1.12.0"
}

package com.example.myvpnapp

import android.content.ComponentName
import android.content.Context
import android.content.Intent
import android.content.ServiceConnection
import android.os.Bundle
import android.os.IBinder
import androidx.appcompat.app.AppCompatActivity
import de.blinkt.openvpn.api.IOpenVPNAPIService
import de.blinkt.openvpn.api.IOpenVPNStatusCallback
import android.widget.Button
import android.widget.Toast
import java.io.InputStream

class MainActivity : AppCompatActivity() {

    private var vpnService: IOpenVPNAPIService? = null
    private var isBound = false

    private val connection = object : ServiceConnection {
        override fun onServiceConnected(name: ComponentName?, service: IBinder?) {
            vpnService = IOpenVPNAPIService.Stub.asInterface(service)
            registerCallback()
            startVPN()
        }

        override fun onServiceDisconnected(name: ComponentName?) {
            vpnService = null
            isBound = false
        }
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        val connectButton = findViewById<Button>(R.id.connect_button)
        val disconnectButton = findViewById<Button>(R.id.disconnect_button)

        connectButton.setOnClickListener {
            bindToVpnService()
        }

        disconnectButton.setOnClickListener {
            disconnectVPN()
        }
    }

    private fun bindToVpnService() {
        val intent = Intent("de.blinkt.openvpn.api.IOpenVPNAPIService")
        intent.setPackage("de.blinkt.openvpn")
        bindService(intent, connection, Context.BIND_AUTO_CREATE)
        isBound = true
    }

    private fun registerCallback() {
        vpnService?.registerStatusCallback(object : IOpenVPNStatusCallback.Stub() {
            override fun newStatus(id: Int, status: String?, message: String?) {
                runOnUiThread {
                    Toast.makeText(this@MainActivity, "$status: $message", Toast.LENGTH_SHORT).show()
                }
            }
        })
    }

    private fun startVPN() {
        try {
            // Load your .ovpn config file from assets or storage
            val config: InputStream = assets.open("server.ovpn")
            val configBytes = config.readBytes()
            vpnService?.startVPN(String(configBytes)) // Pass the config to OpenVPN
        } catch (e: Exception) {
            Toast.makeText(this, "Error starting VPN: ${e.message}", Toast.LENGTH_LONG).show()
        }
    }

    private fun disconnectVPN() {
        try {
            vpnService?.disconnect()
        } catch (e: Exception) {
            Toast.makeText(this, "Error disconnecting: ${e.message}", Toast.LENGTH_LONG).show()
        }
    }

    override fun onDestroy() {
        super.onDestroy()
        if (isBound) {
            unbindService(connection)
            isBound = false
        }
    }
}
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center">

    <Button
        android:id="@+id/connect_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Connect VPN" />

    <Button
        android:id="@+id/disconnect_button"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Disconnect VPN" />

</LinearLayout>
client
dev tun
proto udp
remote YOUR_SERVER_IP 1194
resolv-retry infinite
nobind
persist-key
persist-tun
ca ca.crt
cert client.crt
key client.key
remote-cert-tls server
cipher AES-256-CBC
verb 3
<uses-permission android:name="android.permission.INTERNET" />
<uses-permission android:name="android.permission.BIND_VPN_SERVICE" />